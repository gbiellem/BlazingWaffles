@page "/"

<div class="container.container-fluid ">
    <h5 class="card-header">What is this?</h5>
    <div class="card-body">
        A simple Blazor app that wraps the <A href="https://www.nuget.org/packages/WaffleGenerator">Waffle Generator</A> nuget package.  
        The generator outputs readable gibberish that can be used in place of Lorum Ipsum or alike.  If you would like to know more about the Waffle Generator check out the project on <A href="https://github.com/SimonCropp/WaffleGenerator">GitHub</A>
    </div>
</div>

<div class="container.card">
    <h5 class="card-header">Generator Options</h5>
    <div class="card-body">
        <div class="container.align-items-baseline" style="width: 250px;">
            <div class="form-group form-check">
                <input class="form-check-input" type="checkbox" id="headerschk" bind="@includeheading"/>
                <label class="form-check-label" for="headerschk">Heading</label>
            </div>
            <div class="form-group">
                <label for="paragraphs">Generate @paragraphs Paragraph(s)</label>
                <input class="form-control-range" bind="paragraphs" type="range" min=1 max=10 value=1 step=1 id="paragraphs" onclick="@Generate"/>
            </div>
            <div class="form-group">
                <label for="outputType">OutputType</label>
                <select bind="outputType" class="form-control" id="outputType">
                    <option>Text</option>
                    <option>Html</option>
                </select>
            </div>
        </div>
    </div>
</div>


<div class="container.card">
    <h5 class="card-header">Generator Output</h5>
    <div class="card-body">
        <div style="white-space: pre-line">
            @waffle
        </div>
    </div>
</div>

@functions {

    int _paragraphs;
    int paragraphs
    {
        get => _paragraphs;
        set
        {
            _paragraphs = value;
            Generate();
        }
    }

    bool _includeheading;
    bool includeheading
    {
        get => _includeheading;
        set
        {
            _includeheading = value;
            Generate();
        }
    }

    enum OutputType
    {
        Text,
        Html
    }

    OutputType _outputType;

    OutputType outputType
    {
        get => _outputType;
        set
        {
            _outputType = value;
            Generate();
        }
    }

    string waffle;

    protected override void OnInit()
    {
        paragraphs = 1;
    }

    protected Task Generate()
    {
        if (outputType == OutputType.Text)
        {
            waffle = WaffleGenerator.WaffleEngine.Text(paragraphs, includeheading);
        }
        else
        {
            waffle = WaffleGenerator.WaffleEngine.Html(paragraphs, includeheading);
        }
        return Task.CompletedTask;
    }
}